minio:
  url: http://172.17.0.2:9000
  access-key: zKNvzp774xvfxTvbHQHd
  secret-key: UA0RXKyp1P03BiMdcrIjoCV7DKLUd5ZYHykiCvap
  bucket: belajar-backend
server:
  port: 8080
spring:
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1
  datasource:
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 10
    url: jdbc:postgresql://127.0.0.1/backend_class
    username: postgres
    password: Welcome1!
  jpa:
    database: POSTGRESQL
    hibernate:
      # ddl-auto: update | ketika aplikasi pertama kali dijalankan, database akan dibuat otomatis
      # ddl-auto: validate | ketika aplikasi pertama kali dijalankan, database akan divalidasi (Cocok digunakan untuk production)
      # ddl-auto: none | ketika aplikasi pertama kali dijalankan, database tidak akan dibuat otomatis
      # ddl-auto: create | ketika aplikasi pertama kali dijalankan, database akan dibuat otomatis
      # ddl-auto: create-drop | ketika aplikasi pertama kali dijalankan, database akan dibuat otomatis dan dihapus ketika aplikasi dimatikan
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
test:
  name: Ageng-Test
app:
  name: Ageng
  currency: IDR
---
spring:
  config:
    activate:
      # untuk mengaktifkan profile production
      # mvn spring-boot:run -Dspring-boot.run.profiles=production
      # java -jar target/Ageng-0.0.1-SNAPSHOT.jar --spring.profiles.active=production
      on-profile: production
server:
  port: 9999
app:
  name: Ageng-Production
  currency: IDR-Production
